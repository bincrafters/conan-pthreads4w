--- ptw32_MCS_lock.c	2017-12-18 23:51:19.053296100 +0200
+++ ptw32_MCS_lock.c.new	2017-12-19 00:38:59.970059300 +0200
@@ -103,7 +103,7 @@
 ptw32_mcs_flag_set (HANDLE * flag)
 {
   HANDLE e = (HANDLE)(PTW32_INTERLOCKED_SIZE)PTW32_INTERLOCKED_COMPARE_EXCHANGE_SIZE(
-						(PTW32_INTERLOCKED_SIZEPTR)flag,
+						(volatile LONG64*)flag,
 						(PTW32_INTERLOCKED_SIZE)-1,
 						(PTW32_INTERLOCKED_SIZE)0);
   if ((HANDLE)0 != e)
@@ -123,7 +123,7 @@
 ptw32_mcs_flag_wait (HANDLE * flag)
 {
   if ((PTW32_INTERLOCKED_LONG)0 ==
-        PTW32_INTERLOCKED_EXCHANGE_ADD_SIZE((PTW32_INTERLOCKED_SIZEPTR)flag,
+        PTW32_INTERLOCKED_EXCHANGE_ADD_SIZE((volatile LONG64*)flag,
                                             (PTW32_INTERLOCKED_SIZE)0)) /* MBR fence */
     {
       /* the flag is not set. create event. */
@@ -131,7 +131,7 @@
       HANDLE e = CreateEvent(NULL, PTW32_FALSE, PTW32_FALSE, NULL);
 
       if ((PTW32_INTERLOCKED_SIZE)0 == PTW32_INTERLOCKED_COMPARE_EXCHANGE_SIZE(
-			                  (PTW32_INTERLOCKED_SIZEPTR)flag,
+			                  (volatile LONG64*)flag,
 			                  (PTW32_INTERLOCKED_SIZE)e,
 			                  (PTW32_INTERLOCKED_SIZE)0))
 	{
@@ -194,7 +194,7 @@
   ptw32_mcs_lock_t *lock = node->lock;
   ptw32_mcs_local_node_t *next =
     (ptw32_mcs_local_node_t *)
-      PTW32_INTERLOCKED_EXCHANGE_ADD_SIZE((PTW32_INTERLOCKED_SIZEPTR)&node->next, (PTW32_INTERLOCKED_SIZE)0); /* MBR fence */
+      PTW32_INTERLOCKED_EXCHANGE_ADD_SIZE((volatile LONG64*)&node->next, (PTW32_INTERLOCKED_SIZE)0); /* MBR fence */
 
   if (0 == next)
     {
@@ -212,7 +212,7 @@
       /* wait for successor */
       ptw32_mcs_flag_wait(&node->nextFlag);
       next = (ptw32_mcs_local_node_t *)
-	PTW32_INTERLOCKED_EXCHANGE_ADD_SIZE((PTW32_INTERLOCKED_SIZEPTR)&node->next, (PTW32_INTERLOCKED_SIZE)0); /* MBR fence */
+	PTW32_INTERLOCKED_EXCHANGE_ADD_SIZE((volatile LONG64*)&node->next, (PTW32_INTERLOCKED_SIZE)0); /* MBR fence */
     }
 
   /* pass the lock */
